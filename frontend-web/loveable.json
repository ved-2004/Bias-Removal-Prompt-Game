{
  "name": "Whisper-Loop",
  "description": "Hear AI bias, slide 6 axes fair, export 6-byte patch—no install.",
  "tech": "react",
  "dependencies": ["axios", "lucide-react"],
  "env": {
    "NEXT_PUBLIC_API": "https://your-fastapi.onrender.com"
  },
  "pages": [
    {
      "path": "/",
      "title": "Whisper-Loop",
      "components": [
        {
          "type": "container",
          "className": "min-h-screen bg-gradient-to-br from-indigo-50 to-purple-50 flex items-center justify-center p-8",
          "children": [
            {
              "type": "card",
              "className": "bg-white rounded-3xl shadow-2xl p-8 max-w-3xl w-full space-y-6",
              "children": [
                {
                  "type": "heading",
                  "text": "Whisper-Loop",
                  "level": 1,
                  "className": "text-3xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-purple-600 to-pink-600"
                },
                {
                  "type": "textarea",
                  "placeholder": "Enter a potentially biased sentence…",
                  "rows": 3,
                  "value": "{{prompt}}",
                  "onChange": "setPrompt"
                },
                {
                  "type": "button",
                  "text": "Hear It",
                  "icon": "Play",
                  "onClick": "hearIt",
                  "className": "flex items-center gap-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700"
                },
                {
                  "type": "audio",
                  "src": "{{audioSrc}}",
                  "hidden": true,
                  "autoPlay": true
                },
                {
                  "type": "list",
                  "data": "{{sliders}}",
                  "renderItem": {
                    "type": "slider",
                    "label": "{{item.axis}}",
                    "value": "{{item.value}}",
                    "min": 0,
                    "max": 1,
                    "step": 0.01,
                    "onChange": "remix",
                    "className": "flex-1 h-2 rounded-lg appearance-none cursor-pointer {{item.color}}"
                  }
                },
                {
                  "type": "button",
                  "text": "{{publishing ? 'Publishing…' : 'Publish Patch'}}",
                  "icon": "Upload",
                  "onClick": "publish",
                  "disabled": "{{!allFair || publishing}}",
                  "className": "flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700"
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "state": {
    "prompt": "The policeman told the nurse she should smile more.",
    "logitsId": "",
    "bias": [],
    "sliders": [
      { "axis": "gender", "color": "bg-pink-500", "value": 0 },
      { "axis": "race", "color": "bg-amber-500", "value": 0 },
      { "axis": "age", "color": "bg-blue-500", "value": 0 },
      { "axis": "disability", "color": "bg-green-500", "value": 0 },
      { "axis": "religion", "color": "bg-purple-500", "value": 0 },
      { "axis": "orientation", "color": "bg-rose-500", "value": 0 }
    ],
    "audioSrc": "",
    "publishing": false
  },
  "functions": {
    "hearIt": {
      "body": "
        const { data } = await axios.post(`${process.env.NEXT_PUBLIC_API}/whisper`, { prompt });
        setState({ logitsId: data.logits_id, bias: data.bias_vector, sliders: state.sliders.map((s,i)=>({...s, value:0})), audioSrc: 'data:audio/wav;base64,'+data.wav_b64 });
      "
    },
    "remix": {
      "params": ["idx", "val"],
      "body": "
        const newSliders = [...state.sliders];
        newSliders[idx].value = val;
        setState({ sliders: newSliders });
        const { data } = await axios.post(`${process.env.NEXT_PUBLIC_API}/remix`, { logits_id: state.logitsId, sliders: newSliders.map(s=>s.value) });
        setState({ bias: data.updated_bias, audioSrc: 'data:audio/wav;base64,'+data.wav_b64 });
      "
    },
    "publish": {
      "body": "
        setState({ publishing: true });
        const { data } = await axios.post(`${process.env.NEXT_PUBLIC_API}/publish`, { logits_id: state.logitsId, final_sliders: state.sliders.map(s=>s.value) });
        alert(`Patch published! ID: ${data.patch_id}`);
        setState({ publishing: false });
      "
    }
  },
  "computed": {
    "allFair": "state.bias.length && state.bias.every(b => b < 0.05)"
  }
}
